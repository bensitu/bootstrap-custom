// custom-breakpoints.scss

// Import Bootstrap 4.6.2 variables, mixins and grid
@import "./functions";
@import "./variables";
@import "./mixins";

// Define new breakpoints
$grid-breakpoints: map-merge($grid-breakpoints,
    (xxl: 1400px,
      xxxl: 1600px,
      xxxxl: 2000px));

// Options: Define the max width of new containers(if needed)
$container-max-widths: map-merge($container-max-widths,
    (xxl: 1320px,
      xxxl: 1540px,
      xxxxl: 1800px));

// Define custom border widths
// Apply Bootstrap 5 border widths styles
$border-widths: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px
);

// Define custom border radius
// Apply Bootstrap 5 border radius styles
$border-radius: 0.375rem;
$border-radius-sm: 0.25rem;
$border-radius-lg: 0.5rem;
$border-radius-xl: 1rem;
$border-radius-xxl: 2rem;

// Generate basic container classes
.container,
.container-fluid {
  @include make-container();
}

// Generate responsive container classes
@each $breakpoint, $container-max-width in $container-max-widths {
  .container-#{$breakpoint} {
    @extend .container-fluid;
  }

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    %responsive-container-#{$breakpoint} {
      max-width: $container-max-width;
    }

    // Extend each breakpoint which is smaller or equal to the current breakpoint
    $extend-breakpoint: true;

    @each $name, $width in $grid-breakpoints {
      @if ($extend-breakpoint) {
        .container#{breakpoint-infix($name, $grid-breakpoints)} {
          @extend %responsive-container-#{$breakpoint};
        }

        // Once the current breakpoint is reached, stop extending
        @if ($breakpoint == $name) {
          $extend-breakpoint: false;
        }
      }
    }
  }
}

// Generate grid classes only for new breakpoints
@each $breakpoint in (xxl, xxxl, xxxxl) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    // Generate column classes
    .row#{$infix} {
      @include make-row();
    }

    // Generate row classes
    @for $i from 1 through $grid-columns {
      .col#{$infix}-#{$i} {
        @include make-col-ready();
        @include make-col($i, $grid-columns);
      }
    }

    // Generate .col-{breakpoint} classes
    .col#{$infix} {
      @include make-col-ready();
      @include make-col-auto();
    }

    // Generate .col-{breakpoint}-auto classes
    .col#{$infix}-auto {
      @include make-col-ready();
      @include make-col-auto();
    }
  }
}

@each $key, $value in $border-widths {
  .border-#{$key} {
    border-width: $value !important;
  }
}

.rounded-xl {
  border-radius: $border-radius-xl !important;
}

.rounded-xxl {
  border-radius: $border-radius-xxl !important;
}

// Generate some basic utility classes for new breakpoints
@each $breakpoint in (xxl, xxxl, xxxxl) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    // Display
    .d#{$infix}-none { display: none !important; }
    .d#{$infix}-inline { display: inline !important; }
    .d#{$infix}-inline-block { display: inline-block !important; }
    .d#{$infix}-block { display: block !important; }
    .d#{$infix}-table { display: table !important; }
    .d#{$infix}-table-row { display: table-row !important; }
    .d#{$infix}-table-cell { display: table-cell !important; }
    .d#{$infix}-flex { display: flex !important; }
    .d#{$infix}-inline-flex { display: inline-flex !important; }

    // Flex
    .flex#{$infix}-row { flex-direction: row !important; }
    .flex#{$infix}-column { flex-direction: column !important; }
    .flex#{$infix}-row-reverse { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }
    .flex#{$infix}-wrap { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    .justify-content#{$infix}-start { justify-content: flex-start !important; }
    .justify-content#{$infix}-end { justify-content: flex-end !important; }
    .justify-content#{$infix}-center { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around { justify-content: space-around !important; }
    .align-items#{$infix}-start { align-items: flex-start !important; }
    .align-items#{$infix}-end { align-items: flex-end !important; }
    .align-items#{$infix}-center { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch { align-items: stretch !important; }

    // Text alignment
    .text#{$infix}-left { text-align: left !important; }
    .text#{$infix}-right { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }

    // Float
    .float#{$infix}-left { float: left !important; }
    .float#{$infix}-right { float: right !important; }
    .float#{$infix}-none { float: none !important; }

    // Add other useful classes if needed...
  }
}

// Add responsive hidden classes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .d#{$infix}-none { display: none !important; }
  }
}

// @import "./bootstrap.scss";